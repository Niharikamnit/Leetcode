https://leetcode.com/problems/number-of-1-bits/submissions/

my code-

int hammingWeight(uint32_t n) {
        //we know the bit is 1 if a&1 gives 1 else a&1 will always be 0
        int ones=0;
        while(n!=0) {
            int k=(n&1);
            // k can be 0 or 1
            ones+=k;
            n=n>>1;
        }
        return ones;
    }
    
    orrr instead of a&1 we can do a%2 to get the last bit. then do a/2 instead of a>>1
    
    
    100%%%
    
            int res=0;
        while(n) {
            res+=n%2;
            n=n>>1;
        }
        return res;
    }
    
    
    ----another way- real smartt- watch video for explanantion- https://www.youtube.com/watch?v=5Km3utixwZs
    
       int res=0;
        while(n) {
            n=n&(n-1);
            res+=1;
        }
        return res;
    }
