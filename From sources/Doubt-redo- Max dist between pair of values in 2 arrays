https://leetcode.com/problems/maximum-distance-between-a-pair-of-values/submissions/

O(N+M)

//finding all the elements in nums2 which are greater than nums1 and getting res

    int maxDistance(vector<int>& nums1, vector<int>& nums2) {
        int i=0,j=0;
        int n=nums1.size(),m=nums2.size();
        int res=0;
        while(i<n&&j<m) {
            if(nums1[i]>nums2[j]) i++;
            else {
                res = max(res,j-i);
                j++;
            }
        }
        return res;
    }
    
    
    //O(nlogm)
    //as array are sorted in non-increasing order(decreasing) use binary search to find the minimum element in nums2 that is larget than nums1[i].
    
    int ans = 0;
    
    int n = nums1.size();
    int m = nums2.size();
    
    for(int i = 0 ; i < n ; i++){
        int low  = i;
        int high = m - 1;
        int value = i;
        
        while(low <= high){
            int mid = (low + high) / 2;
            
            if(nums2[mid] >= nums1[i]){
                low = mid + 1;
                value = mid;
            }else{
                high = mid - 1;
            }
        }
        
        ans = max(ans , value - i);
    }
    
    return ans;
