https://leetcode.com/problems/path-sum/discuss/?currentPage=1&orderBy=most_votes&query=&tag=c

 bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==NULL) return false;
        if(root->left==NULL&&root->right==NULL&&targetSum==root->val) return true;
        
        bool left = hasPathSum(root->left,targetSum-root->val);
        bool right = hasPathSum(root->right,targetSum-root->val);
        
        return left||right;
    }
    
    
    bool hasPathSum(TreeNode* root, int sum) {
        if(root == NULL) return false;
        stack<pair<TreeNode*,int>> stack;
        stack.push({root, root->val});
        while(!stack.empty()) {
            TreeNode* current = stack.top().first; 
            int total_sum = stack.top().second; stack.pop();
            if(current->right) stack.push({current->right, total_sum+current->right->val});
            if(current->left) stack.push({current->left, total_sum+current->left->val});
            if(!current->right && !current->left && total_sum==sum) { //if its a leaf
                return true; //and total sum is found
            }
        }
        return false;
    }
