https://leetcode.com/problems/next-greater-element-i/submissions/


Took related topics hint, to use stack

 vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        //stack idea
        unordered_map<int,int> m;
        stack<int> st;
        for(int i=0;i<nums1.size();i++) {
            m.insert({nums1[i],-1});
        }
        for(int i=0;i<nums2.size();i++) {
            if(m.find(nums2[i])!=m.end()) {
                if(!st.empty()) {
                    while(!st.empty()&&nums2[i]>st.top()) {
                        m[st.top()]=nums2[i];
                        st.pop();
                    }
                    st.push(nums2[i]);
                }
                else st.push(nums2[i]);
            }
            else {
                if(!st.empty()) {
                    while(!st.empty()&&nums2[i]>st.top()) {
                        m[st.top()]=nums2[i];
                        st.pop();
                    }
                }
            }
        }
        for(int i=0;i<nums1.size();i++) {
            nums1[i]=m[nums1[i]];
        }
        return nums1;
    }


Next greater element- II

https://leetcode.com/problems/next-greater-element-ii/submissions/

 vector<int> nextGreaterElements(vector<int>& nums) {
        // loop once- for normal array
        // loop twice-for circular array
        stack<int> st;
        int n=nums.size();
        vector<int> res(n,-1);
        for(int i=0;i<2*n;i++) {
            while(!st.empty()&&nums[st.top()]<nums[i%n]) {
                res[st.top()]=nums[i%n];
                st.pop();
            }
            st.push(i%n);
        }
        return res;
    }
