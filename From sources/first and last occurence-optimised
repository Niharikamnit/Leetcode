https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/submissions/



 vector<int> searchRange(vector<int>& a, int target) {
        
        int n=a.size();
        int l=0,h=n-1;
        vector<int> ans;
        //first occurence
        while(l<=h) {
            int mid= l + (h-l)/2;
            if(a[mid]==target) {
                //tle
                // int k=mid;
                // while(k<n&&a[k]==target) k++;
                // int m=mid;
                // while(m>=0&&a[m]==target) m--;
                // ans.push_back(m);
                // ans.push_back(k);
                
                if(mid==l||a[mid]!=a[mid-1]){
                    ans.push_back(mid);
                    break;
                }
                else {
                    h=mid-1;
                }
            }
            else if(a[mid]>target) {
                h=mid-1;
            }
            else l=mid+1;
            
        }
        //last occurence
        l=0,h=n-1;
        while(l<=h) {
        int mid= l + (h-l)/2;
            if(a[mid]==target) {
                //tle method
                // int k=mid;
                // while(k<n&&a[k]==target) k++;
                // int m=mid;
                // while(m>=0&&a[m]==target) m--;
                // ans.push_back(m);
                // ans.push_back(k);
                
                if(mid==h||a[mid]!=a[mid+1]){
                    ans.push_back(mid);
                    break;
                }
                else {
                    l=mid+1;
                }
            }
            else if(a[mid]>target) {
                h=mid-1;
            }
            else l=mid+1;
            
        }
        
        if(ans.size()==0) {
            ans.push_back(-1);
            ans.push_back(-1);
        }
        return ans;       
}
