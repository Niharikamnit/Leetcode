https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1#

add previous possible combination without including arr[i-1] and all the combinationsfor j-arr[i-1] when arr[i-1] have been included

Doubt in recursiveve
	int perfectSum(int arr[], int n, int sum)
	{
if(n==0) {
            if(sum!=0) return 0;
            else return 1;
        }
        
        if(arr[n-1]<=sum) return perfectSum(arr,n-1,sum)+perfectSum(arr,n-1,sum-arr[n-1]);
        
        else return perfectSum(arr,n-1,sum);
 }
 
 
 top-down-

 
 int perfectSum(int arr[], int n, int sum)
	{        
        int dp[n+1][sum+1];
        int mod=1000000007;
        memset(dp,0,sizeof(dp));
        //if sum=0
        for(int i=0;i<=n;i++) {
            dp[i][0] = 1;
        }
        //if n=0;
        for(int i=0;i<=sum;i++) {
            dp[0][i]=0;
        }
        dp[0][0]=1;
        for(int i=1;i<=n;i++) {
            for(int j=1;j<=sum;j++) {
                if(arr[i-1]<=j)
                dp[i][j]=dp[i-1][j]%mod+dp[i-1][j-arr[i-1]]%mod;
                
                else dp[i][j]=dp[i-1][j]%mod;
            }
        }
        return dp[n][sum]%mod;
	}
